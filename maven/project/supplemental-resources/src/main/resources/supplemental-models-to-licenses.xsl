<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="1.0"
  xmlns:s="http://maven.apache.org/supplemental-model/1.0.0">

  <!--
    $Id: supplemental-models-to-licenses.xsl 8881 2014-09-04 16:02:56Z birkland $
    $URL: https://scm.dataconservancy.org/svn/maven/project/trunk/supplemental-resources/src/main/resources/supplemental-models-to-licenses.xsl $
    
    This stylesheet transforms the Maven Remote Resources Plugin supplemental model to the 
    Codehaus licenses model.
    
    The MRRP supplemental model is serialized in the supplemental-models.xml file, and more
    information on its format is at http://maven.apache.org/plugins/maven-remote-resources-plugin/supplemental-models.html
    
    The Codeaus licences model is serialized in the licences.xml file, and more information
    on its format is at http://mojo.codehaus.org/license-maven-plugin/examples/example-download-licenses.html
  -->

  <xsl:output indent="yes" version="1.0" media-type="application/xml" encoding="UTF-8" method="xml"/>

  <xsl:template match="/">
    <xsl:text>
</xsl:text>
    <xsl:comment>  
      Generated by transforming supplemental-models.xml (found in org.dataconservancy:supplemental-resources) with $Id: supplemental-models-to-licenses.xsl 8881 2014-09-04 16:02:56Z birkland $
      found at $URL: https://scm.dataconservancy.org/svn/maven/project/trunk/supplemental-resources/src/main/resources/supplemental-models-to-licenses.xsl $
</xsl:comment>

    <licenseSummary xmlns="http://mojo.codehaus.org/">

      <dependencies>
        
        <xsl:apply-templates select="//s:project"/>
        
      </dependencies>

    </licenseSummary>

  </xsl:template>

  <xsl:template match="//s:project">
    <xsl:if test="s:licenses/s:license">
      <dependency xmlns="http://mojo.codehaus.org/">
        <groupId><xsl:value-of select="s:groupId"/></groupId>
        <artifactId><xsl:value-of select="s:artifactId"/></artifactId>
        <version><xsl:value-of select="s:version"/></version>
        <licenses>
          <xsl:for-each select="s:licenses/s:license">
            <license>
              <xsl:if test="s:name">
                <name><xsl:value-of select="s:name"/></name>
              </xsl:if>
              <xsl:if test="s:url">
                <url><xsl:value-of select="s:url"/></url>
              </xsl:if>
              <xsl:if test="s:distribution">
                <distribution><xsl:value-of select="s:distribution"/></distribution>
              </xsl:if>
              <xsl:if test="s:comments">
                <comments><xsl:value-of select="s:comments"/></comments>
              </xsl:if>
            </license>
          </xsl:for-each>
        </licenses>
      </dependency>
    </xsl:if>
  </xsl:template>

</xsl:stylesheet>
